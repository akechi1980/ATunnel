/**
 *   Package Format
 *   ------------------------------------------------
 *   | VI          | PackageData                    |
 *   ------------------------------------------------
 *   PackageData
 *   ------------------------------------------------
 *   | FrameHead |     Real Data                    |
 *   ------------------------------------------------
 *   FrameHead      Fill by Radom Data  
 *          FrameHead Len          16 or 32 whatever 
 *          CheckStr               ==Atunnel==
 *          CheckStrStarPos        0 , 2 ,4 whatever 
 *          CheckStrEndPos          
 *   EncodeMethod
 * 
 * 
 */

export class Mode1Package{

    CacheBuffer : Buffer;
    PackageFormat : any;
    PackageEncode : any;

    public onRealDataReceivedHandler: (data : Buffer) => void;
    
    constructor() {
        this.CacheBuffer = new Buffer([]);
        // WithDataSize Crypt
        //this.PackageFormat = [0,1,'C',1,8,'<DataSize>',8,16,'==Atunnel==',16,32,''];
        // WithOutDataSize Hash
        this.PackageFormat = [0,1,'C',1,32,'<DataDiff>:==Atunnel==,sha1'];

        this.PackageEncode = ['aes192', 'Atunnel'];


    }

    public put(inBuffer : Buffer ){
        this.CacheBuffer = Buffer.concat([this.CacheBuffer,inBuffer]);

        //Check Conditions 
        if(this.CacheBuffer.length >= 9){
            
            //Get InfoDatas
            var data : Buffer = this.CacheBuffer.slice(0,9);
            this.CacheBuffer = this.CacheBuffer.slice(9);
            this.onRealDataReceivedHandler(data);
            
        }

    }

    // public put = (inBuffer : Buffer ) => {
        
    //     this.CacheBuffer = Buffer.concat([this.CacheBuffer,inBuffer]);
    //     if(this.CacheBuffer.length >= 9){
    //         this.RealDataReceivedHandler();
    //     }
    // }



}


//For TEST1
let mMode1Package = new Mode1Package();

mMode1Package.onRealDataReceivedHandler = function(data){
    console.log('>> receive data:'+ data.toString('hex'));
};

mMode1Package.put(new Buffer([0,9]));
mMode1Package.put(new Buffer([1,2,3,4,5,6,7]));
mMode1Package.put(new Buffer([8,9]));
mMode1Package.put(new Buffer([0,3,1,2,3,0,6,1,2,3,4,5,6]));
mMode1Package.put(new Buffer([1,2,3,4,5,6,7]));
mMode1Package.put(new Buffer([8,9]));
mMode1Package.put(new Buffer([0,3,1,2,3,0,6,1,2,3,4,5,6]));

//For TEST2 File Trans