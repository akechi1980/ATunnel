"use strict";
exports.__esModule = true;
var Mode1Package = (function () {
    function Mode1Package() {
        this.CacheBuffer = new Buffer([]);
        this.PackageFormat = [0, 1, 'C', 1, 5, '<DataSize>', 5, 16, '==Atunnel==', 16, 32, 'XXXX'];
        this.PackageEncode = ['aes192', 'Atunnel'];
    }
    Mode1Package.prototype.put = function (inBuffer) {
        this.CacheBuffer = Buffer.concat([this.CacheBuffer, inBuffer]);
        if (this.CacheBuffer.length >= 9) {
            var data = this.CacheBuffer.slice(0, 9);
            this.CacheBuffer = this.CacheBuffer.slice(9);
            this.onRealDataReceivedHandler(data);
        }
    };
    return Mode1Package;
}());
exports.Mode1Package = Mode1Package;
var mMode1Package = new Mode1Package();
mMode1Package.onRealDataReceivedHandler = function (data) {
    console.log('>> receive data:' + data.toString('hex'));
};
mMode1Package.put(new Buffer([0, 9]));
mMode1Package.put(new Buffer([1, 2, 3, 4, 5, 6, 7]));
mMode1Package.put(new Buffer([8, 9]));
mMode1Package.put(new Buffer([0, 3, 1, 2, 3, 0, 6, 1, 2, 3, 4, 5, 6]));
mMode1Package.put(new Buffer([1, 2, 3, 4, 5, 6, 7]));
mMode1Package.put(new Buffer([8, 9]));
mMode1Package.put(new Buffer([0, 3, 1, 2, 3, 0, 6, 1, 2, 3, 4, 5, 6]));
//# sourceMappingURL=Mode1Package.js.map