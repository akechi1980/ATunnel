"use strict";
exports.__esModule = true;
var crypto = require("crypto");
var zlib = require("zlib");
var TunnelUtils = (function () {
    function TunnelUtils() {
    }
    TunnelUtils.encode = function (inbuf, method, pass) {
        try {
            var cipher = crypto.createCipher(method, pass);
            var encrypted = cipher.update(inbuf);
            encrypted = Buffer.concat([encrypted, cipher.final()]);
        }
        catch (e) {
            console.log(e.message);
        }
        return encrypted;
    };
    TunnelUtils.decode = function (inbuf, method, pass) {
        try {
            var decipher = crypto.createDecipher(method, pass);
            var encrypted = decipher.update(inbuf);
            encrypted = Buffer.concat([encrypted, decipher.final()]);
        }
        catch (e) {
            console.log(e.message);
        }
        return encrypted;
    };
    TunnelUtils.zip = function (inbuf) {
        try {
            var encrypted = zlib.gzipSync(inbuf);
        }
        catch (e) {
            console.log(e.message);
        }
        return encrypted;
    };
    TunnelUtils.unzip = function (inbuf) {
        try {
            var encrypted = zlib.gunzipSync(inbuf);
        }
        catch (e) {
            console.log(e.message);
        }
        return encrypted;
    };
    return TunnelUtils;
}());
exports.TunnelUtils = TunnelUtils;
var testBuf = Buffer.from('JustTest');
console.log(TunnelUtils.decode(TunnelUtils.encode(testBuf, 'aes192', '123'), 'aes192', '123').toString());
console.log(TunnelUtils.unzip(TunnelUtils.zip(testBuf)).toString());
//# sourceMappingURL=Utils.js.map